total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_exists, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
colnames(myDF)
myDF = myDF[, -c(1, 24, 26, 27, 29:31)] %<>%
arrange(sale_price)
colnames(myDF)
myDF = myDF[, -c( 24, 26, 27, 29:31)] %<>%
arrange(sale_price)
myDF %<>%
mutate(total_taxes = ifelse(coop_condo == 1 & is.na(total_taxes), 0, total_taxes),
maintenance_cost = ifelse(is.na(maintenance_cost), 0, maintenance_cost),
common_charges = ifelse(is.na(common_charges), 0, common_charges),
total_maintenance = common_charges + total_taxes + maintenance_cost) %>%
select(-total_taxes, -maintenance_cost, -common_charges) %>%
filter(!is.na(total_maintenance))
newDF = myDF %<>%
filter(!is.na(sale_price))
skim(newDF)
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_avaliable = ifelse(!is.na(garage_exists), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_exists, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_avaliable = ifelse(!is.na(garage_exists), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_exists, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_avaliable = ifelse(!is.na(garage_exists), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_avaliable, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_avaliable = ifelse(!is.na(garage_avaliable), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_avaliable, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_avaliable = ifelse(!is.na(garage_avaliable), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_avaliable, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
rlang::last_error()
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_avaliable = ifelse(!is.na(garage_exists), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_avaliable, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
pacman::p_load(skimr, dplyr, magrittr, lubridate, stringr, ggplot2)
myDF = readr::read_csv("/Users/meiheliu/Math-342W/final_project/housing_data_2016_2017.csv")
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_exists= ifelse(!is.na(garage_exists), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_exists, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
colnames(myDF)
newDF = myDF %<>%
filter(!is.na(sale_price))
skim(newDF)
arrange(sale_price)
newDF = myDF %<>%
filter(!is.na(sale_price))
arrange(sale_price)%>%
pacman::p_load(skimr, dplyr, magrittr, lubridate, stringr, ggplot2)
myDF = readr::read_csv("/Users/meiheliu/Math-342W/final_project/housing_data_2016_2017.csv")
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_exists= ifelse(!is.na(garage_exists), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_exists, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,-sale_price
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
pacman::p_load(skimr, dplyr, magrittr, lubridate, stringr, ggplot2)
myDF = readr::read_csv("/Users/meiheliu/Math-342W/final_project/housing_data_2016_2017.csv")
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_exists= ifelse(!is.na(garage_exists), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_exists, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,-sale_price
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
pacman::p_load(skimr, dplyr, magrittr, lubridate, stringr, ggplot2)
myDF = readr::read_csv("/Users/meiheliu/Math-342W/final_project/housing_data_2016_2017.csv")
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_exists= ifelse(!is.na(garage_exists), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_exists, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,-sale_price,
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
colnames(myDF)
newDF = myDF %<>%
filter(!is.na(sale_price))
pacman::p_load(skimr, dplyr, magrittr, lubridate, stringr, ggplot2)
myDF = readr::read_csv("/Users/meiheliu/Math-342W/final_project/housing_data_2016_2017.csv")
myDF %<>%
mutate(cats_allowed = ifelse(cats_allowed == "yes" | cats_allowed == "y", 1, 0),
dogs_allowed = ifelse(dogs_allowed == "yes" | dogs_allowed == "yes89", 1, 0),
coop_condo = ifelse(coop_condo == "co-op", 1, 0),
garage_exists= ifelse(!is.na(garage_exists), 1, 0),
kitchen_type = factor(ifelse(kitchen_type == "eat in" | kitchen_type == "Eat In" |
kitchen_type == "Eat in" | kitchen_type == "eatin", "eat in",
ifelse(kitchen_type == "Combo" | kitchen_type == "combo", "combo",
ifelse(kitchen_type == "efficiency" | kitchen_type == "efficiency kitchene" |
kitchen_type == "efficiency kitchen" | kitchen_type == "efficiemcy" |
kitchen_type == "efficiency ktchen", "efficiency", kitchen_type)))),
fuel_type = ifelse(fuel_type == "Other" |fuel_type == "none", "other", fuel_type),
maintenance_cost = as.numeric(str_remove_all(str_remove_all(maintenance_cost, "[,]"), "[$]")),
parking_charges = as.numeric(str_remove_all(str_remove_all(parking_charges, "[,]"), "[$]")),
sale_price = as.numeric(str_remove_all(str_remove_all(sale_price, "[,]"), "[$]")),
total_taxes = as.numeric(str_remove_all(str_remove_all(total_taxes, "[,]"), "[$]")),
listing_price_to_nearest_1000 = as.numeric(str_remove_all(str_remove_all(listing_price_to_nearest_1000, "[,]"), "[$]")),
common_charges = as.numeric(str_remove_all(str_remove_all(common_charges, "[,]"), "[$]")),
zip_code = str_sub(URL, start = -15, end = -11),
street_address = sapply(strsplit(full_address_or_zip_code, ","),"[",1),
date_of_sale = mdy(date_of_sale),
month_of_sale = month(date_of_sale),
season = factor(ifelse(month_of_sale == 3 | month_of_sale == 4 | month_of_sale == 5, "spring",
ifelse(month_of_sale == 6 | month_of_sale == 7 | month_of_sale == 8, "summer",
ifelse(month_of_sale == 9 | month_of_sale == 10 | month_of_sale == 11, "fall",
ifelse(month_of_sale == 12 | month_of_sale == 1 | month_of_sale == 2, "winter", NA)))))
) %>%
filter(!is.na(approx_year_built), !is.na(kitchen_type), !is.na(num_total_rooms),!is.na(community_district_num),!is.na(sale_price)) %>%
select(-CreationTime, -Expiration, -url, -Description, -RequesterAnnotation,
-num_half_bathrooms, -garage_exists, -HITId, -HITTypeId, -AssignmentId, -WorkerId, -AcceptTime,
-SubmitTime, -AutoApprovalTime, -ApprovalTime, -LifetimeApprovalRate, -Last7DaysApprovalRate,
-Last30DaysApprovalRate, -Keywords, -NumberOfSimilarHITs, -LifetimeInSeconds, -RejectionTime,
-RequesterFeedback, -URL, -full_address_or_zip_code, -model_type, -date_of_sale,
-listing_price_to_nearest_1000, -month_of_sale) %>%
mutate(kitchen_type = factor(kitchen_type),
fuel_type = factor(fuel_type),
dining_room_type = factor(dining_room_type))
colnames(myDF)
newDF = myDF %<>%
filter(!is.na(sale_price))
skim(newDF)
pacman::p_load(YARF)
options(java.parameters = "-Xmx4000m")
tree_mod = YARFCART(X_train, y_train)
n_train = 1:360
n_test = 4361:length(y)
colnames(newDF)
y = newDF[, 15]
X = newDF[, -15]
M = tbl_df(apply(is.na(X), 2, as.numeric))
colnames(M) = paste("is_missing_", colnames(X), sep = "")
M = tbl_df(t(unique(t(M))))
M %<>% select_if(function(x){sum(x) > 0})
M
# impute on NA's
pacman::p_load(missForest)
colnames(X); skim(X)
vars_to_impute = c(11,6,16,14,15)
no_NAs = setdiff(1:22, vars_to_impute)
x = X[, c(8, no_NAs)]
for (i in vars_to_impute){
Ximp = missForest(data.frame(x), sampsize = rep(125, ncol(x)), replace = TRUE)$ximp
x = cbind(X[, i], Ximp)
}
colnames(newDF)
y = newDF[, 15]
X = newDF[, -15]
M = tbl_df(apply(is.na(X), 2, as.numeric))
colnames(M) = paste("is_missing_", colnames(X), sep = "")
M = tbl_df(t(unique(t(M))))
M %<>% select_if(function(x){sum(x) > 0})
M
# impute on NA's
pacman::p_load(missForest)
colnames(X); skim(X)
vars_to_impute = c(11,6,16,14,15)
no_NAs = setdiff(1:22, vars_to_impute)
x = X[, c(8, no_NAs)]
for (i in vars_to_impute){
Ximp = missForest(data.frame(x), sampsize = rep(50, ncol(x)), replace = TRUE)$ximp
x = cbind(X[, i], Ximp)
}
